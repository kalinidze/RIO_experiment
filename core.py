from owlready2 import *

# Load the DUL ontology
dul = get_ontology("http://www.ontologydesignpatterns.org/ont/dul/DUL.owl").load()

onto = get_ontology("http://example.org/ri.owl")

with onto:
    onto.imported_ontologies.append(dul)

    class ResearchObject(dul.InformationObject):
        """A data or artifact produced or used in research processes. This includes structured datasets, physical or digital samples, publications, and other primary research outputs."""
        label = ["Research Object"]
        comment = ["A data or artifact produced or used in research (e.g., datasets, samples, publications)."]

    class ResearchTopic(dul.Description):
        """A thematic problem, question, or subject area addressed in the course of research. Used to classify research objectives and domains."""
        label = ["Research Topic"]
        comment = ["A research question or subject matter addressed by research."]

    class Activity(dul.Event):
        """Any scientific or research-related action, including experimentation, observation, data analysis, and computational processes."""
        label = ["Activity"]
        comment = ["A process or action taken in research (e.g., experiment, analysis)."]

    class ConceptualObject(dul.Description):
        """An abstract conceptual entity used in the formulation or interpretation of research, such as theories, models, methodologies, or frameworks."""
        label = ["Conceptual Object"]
        comment = ["A conceptual entity used in research (e.g., theory, model, method)."]

    class Agent(dul.SocialAgent):
        """A person, group, or organization responsible for conducting, supporting, or overseeing research activities."""
        label = ["Agent"]
        comment = ["A person or organization involved in research (e.g., researcher, institution)."]

    class ResearchObjectProperty(dul.Quality):
        """A measurable or descriptive characteristic of a research object or activity. Includes technical attributes, semantic descriptors, and quality indicators."""
        label = ["Research Object Property"]
        comment = ["A characteristic or attribute of a research object or activity."]

    class Provenance(dul.Description):
        """Metadata describing the origin, history, and evolution of a research object, including who created it, how, and under what conditions."""
        label = ["Provenance"]
        comment = ["Information about the origin or history of a research object."]

    class Representation(dul.InformationObject):
        """The formal or technical format in which a research object is stored or exchanged. Includes data formats, encodings, schemas, and ontologies."""
        label = ["Representation"]
        comment = ["A format or encoding of a research object (e.g., file format, schema)."]

    # Define semantic object properties
    class has_representation(ObjectProperty):
        """Links a ResearchObject to its technical representation or encoding."""
        domain = [ResearchObject]
        range = [Representation]

    class produces(ObjectProperty):
        """Indicates that an Activity results in the creation of a ResearchObject."""
        domain = [Activity]
        range = [ResearchObject]

    class produced_by(ObjectProperty):
        """Indicates that a ResearchObject was generated by an Activity."""
        domain = [ResearchObject]
        range = [Activity]
        inverse_property = produces

    class uses(ObjectProperty):
        """Specifies that an Activity consumes or relies on a ResearchObject."""
        domain = [Activity]
        range = [ResearchObject]

    class performed_by(ObjectProperty):
        """Connects an Activity with the Agent that performed it."""
        domain = [Activity]
        range = [Agent]

    class addresses_topic(ObjectProperty):
        """Links an Activity to the ResearchTopic it investigates or contributes to."""
        domain = [Activity]
        range = [ResearchTopic]

    class has_property(ObjectProperty):
        """Connects a ResearchObject or Activity to its relevant attributes or characteristics."""
        domain = [Activity, ResearchObject]
        range = [ResearchObjectProperty]

    class has_provenance(ObjectProperty):
        """Links a ResearchObject to its provenance metadata."""
        domain = [ResearchObject]
        range = [Provenance]

def get_core_onto():
    """Return the in-memory core ontology instance."""
    return onto

# Save to OWL (RDF/XML format)
onto.save(file="ri_core.owl", format="rdfxml")

